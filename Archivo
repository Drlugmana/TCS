// ... dos líneas antes (contexto)
int row = 2;

foreach (var serverWithEntities in _serversWithEntities)
{
    var server = serverWithEntities.Server;

    // ======= INICIO BLOQUE NUEVO: elegir entidad con MonitoringMode =======
    // ranking de modos
    int ModeRank(string? mm) => mm?.ToUpperInvariant() switch
    {
        "INFRASTRUCTURE" => 3,
        "FULL_STACK"     => 2,
        "DISCOVERY"      => 1,
        _                => 0
    };

    // candidatas que sí traen MonitoringMode
    var withMode = serverWithEntities.Entities
        .Where(e => !string.IsNullOrWhiteSpace(e?.Properties?.MonitoringMode))
        .ToList();

    EntitySchema? chosen;

    if (withMode.Count > 0)
    {
        // prioriza modo > recencia
        chosen = withMode
            .OrderByDescending(e => ModeRank(e.Properties!.MonitoringMode))
            .ThenByDescending(e => e.LastSeen)
            .FirstOrDefault();
    }
    else
    {
        // si ninguna trae MonitoringMode, usa la más reciente
        chosen = serverWithEntities.Entities
            .OrderByDescending(e => e.LastSeen)
            .FirstOrDefault();
    }

    var latest = chosen;                     // <-- mantenemos el nombre 'latest'
    var p  = latest?.Properties ?? new EntityProperties();
    var mz = latest?.ManagementZones ?? new List<ManagementZone>();
    var tg = latest?.Tags ?? new List<Tag>();

    // ======= FIN BLOQUE NUEVO =======

    // (escritura en Excel tal como ya tienes)
    worksheet.Cells[row,  1].Value = server?.Name ?? "";
    worksheet.Cells[row,  2].Value = server.Class;
    worksheet.Cells[row,  3].Value = server.Group;
    worksheet.Cells[row,  4].Value = latest?.Tenant;
    worksheet.Cells[row,  5].Value = latest?.Environment;
    worksheet.Cells[row,  6].Value = latest?.EntityId;
    worksheet.Cells[row,  7].Value = latest?.Type;
    worksheet.Cells[row,  8].Value = latest?.DisplayName;
    worksheet.Cells[row,  9].Value = latest?.FirstSeen;
    worksheet.Cells[row,  9].Style.Numberformat.Format = "dd/mm/yyyy HH:mm:ss";
    worksheet.Cells[row, 10].Value = latest?.LastSeen;
    worksheet.Cells[row, 10].Style.Numberformat.Format = "dd/mm/yyyy HH:mm:ss";
    worksheet.Cells[row, 11].Value = p.InstallerTrackedDownload == true ? "Verdadero" : "Falso";
    worksheet.Cells[row, 12].Value = p.PhysicalMemory?.ToString() ?? "";
    worksheet.Cells[row, 13].Value = p.Standalone == true ? "Verdadero" : "Falso";
    worksheet.Cells[row, 14].Value = p.StandaloneSpecialAgentsOnly == true ? "Verdadero" : "Falso";
    worksheet.Cells[row, 15].Value = p.LogicalCpuCores?.ToString() ?? "";
    worksheet.Cells[row, 16].Value = p.IsMonitoringCandidate == true ? "Verdadero" : "Falso";
    worksheet.Cells[row, 17].Value = p.CpuCores?.ToString() ?? "";
    worksheet.Cells[row, 18].Value = p.MemoryTotal?.ToString() ?? "";
    worksheet.Cells[row, 19].Value = p.InstallerSupportAlert == true ? "Verdadero" : "Falso";
    worksheet.Cells[row, 20].Value = string.Join(",", p.IpAddress ?? new List<string>());
    worksheet.Cells[row, 21].Value = string.Join(",", mz.Where(z => z?.Name != null).Select(z => z!.Name));
    worksheet.Cells[row, 22].Value = string.Join(",", tg.Where(t => t?.Key  != null).Select(t => t!.Key));
    worksheet.Cells[row, 23].Value = string.Join(",", tg.Where(t => t?.StringRepresentation != null)
                                                        .Select(t => t!.StringRepresentation));
    worksheet.Cells[row, 24].Value = string.Join(",", tg.Where(t => t?.Value != null).Select(t => t!.Value));
    worksheet.Cells[row, 25].Value = p.OsType ?? "";
    worksheet.Cells[row, 26].Value = p.DetectedName ?? "";
    worksheet.Cells[row, 27].Value = p.State ?? "";
    worksheet.Cells[row, 28].Value = p.OneAgentCustomHostName ?? "";
    worksheet.Cells[row, 29].Value = p.HypervisorType ?? "";
    worksheet.Cells[row, 30].Value = p.Bitness ?? "";
    worksheet.Cells[row, 31].Value = p.OsArchitecture ?? "";
    worksheet.Cells[row, 32].Value = p.OsVersion ?? "";
    worksheet.Cells[row, 33].Value = p.InstallerVersion ?? "";
    worksheet.Cells[row, 34].Value = p.NetworkZone ?? "";
    worksheet.Cells[row, 35].Value = p.AutoInjection ?? "";

    // aquí verás DISCOVERY/FULL_STACK/INFRASTRUCTURE si el elegido lo trae
    worksheet.Cells[row, 36].Value = p.MonitoringMode ?? "";

    worksheet.Cells[row, 37].Value = p.HostGroupName ?? "";
    worksheet.Cells[row, 38].Value = server.Managed;
    worksheet.Cells[row, 39].Value = server.Virtual;

    row++;
}
// ... dos líneas después (contexto)