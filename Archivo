
[HttpGet("health")]
public IActionResult Health([FromServices] IConfiguration cfg)
{
    var rel = cfg["JurisdictionModel:Path"] ?? "ML/Models/jurisdiction_model.zip";
    var full = Path.GetFullPath(rel, AppContext.BaseDirectory);

    var results = new List<string>();

    // 1) Modelo en disco
    results.Add(File.Exists(full) ? "Model: OK" : $"Model: MISSING at {full}");

    // 2) Inference m√≠nima (sin red)
    try
    {
        var eng = MLModelInitializer.GetEngine(); // o usa tu pool
        var pred = eng.Predict(new JurisdictionInput { Text = "ping" });
        results.Add($"Inference: OK ({pred.PredictedLabel})");
    }
    catch (Exception ex) { results.Add($"Inference: FAIL ({ex.GetType().Name})"); }

    // 3) Conectividad externa (opcional, si usas API externas)
    try
    {
        using var http = new HttpClient { Timeout = TimeSpan.FromSeconds(5) };
        // Cambia por tu base URL real
        var resp = http.GetAsync("https://tu-api-externa/health").Result;
        results.Add($"External: {(resp.IsSuccessStatusCode ? "OK" : $"FAIL ({(int)resp.StatusCode})")}");
    }
    catch (Exception ex) { results.Add($"External: FAIL ({ex.GetType().Name})"); }

    return Ok(new { checks = results });
}
