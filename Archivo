public static void CreateMonitoredSheet(ExcelPackage package)
{
    var worksheet = package.Workbook.Worksheets.Add("Monitoreados");

    var headers = new[]
    {
        "Server Name", "Server Class", "Server Group",
        "Tenant", "Environment", "Entity Id", "Type",
        "Display Name", "First Seen", "Last Seen",
        "Installer Tracked Download", "Physical Memory",
        "Standalone", "Standalone Special AgentsOnly",
        "Cpu Cores", "Memory Total", "Installer Support Alert",
        "Ip Address", "Management Zones", "Tags Key", "Tags String Representation",
        "Tags Value", "Os Type", "Detected Name", "State", "OneAgent Custom Host Name",
        "HypervisorType", "Bitness", "Os Architecture", "Os Version", "Installer Version",
        "Network Zone", "Auto Injection", "Monitoring Mode", "Host Group Name",
        "Gestionado Por", "Es Virtual", "Sistema Operativo–Versión", "Operational State",
        "Inventario Torres", "Aplica Monitoreo por SO", "Aplica por Nombre", "Estado Operativo"
    };

    for (int i = 0; i < headers.Length; i++)
    {
        worksheet.Cells[1, i + 1].Value = headers[i];
        worksheet.Cells[1, i + 1].Style.Font.Bold = true;
    }

    // … (cargar inventarios / catálogos como ya lo tienes) …

    int row = 2;

    foreach (var serverWithEntities in _serversWithEntities)
    {
        var server = serverWithEntities.Server;
        var latest = serverWithEntities.Entities.OrderByDescending(e => e.LastSeen).FirstOrDefault();

        // Preferir el nombre “tal cual Dynatrace” (con dominio si lo hay)
        string dynNameFull = null;
        try
        {
            var oneAgent = latest?.GetType().GetProperty("OneAgentCustomHostName")?.GetValue(latest)?.ToString();
            var detected = latest?.GetType().GetProperty("DetectedName")?.GetValue(latest)?.ToString();
            dynNameFull = !string.IsNullOrWhiteSpace(oneAgent) ? oneAgent
                       : !string.IsNullOrWhiteSpace(detected) ? detected
                       : latest?.DisplayName;
        }
        catch { /* ignorar si no existen las props */ }

        // Estado operativo se busca por clave normalizada (suele venir sin dominio)
        var keyForStatus = NormalizeHost(server?.Name ?? string.Empty);
        string estado;
        if (!opStatus.TryGetValue(keyForStatus, out estado))
            estado = "SIN DATO";

        // >>> AQUI: Escribimos FQDN si Dynatrace lo trae, si no el nombre de CMDB
        var nameToWrite = !string.IsNullOrWhiteSpace(dynNameFull) ? dynNameFull : (server?.Name ?? string.Empty);
        worksheet.Cells[row, 1].Value = nameToWrite;

        worksheet.Cells[row, 2].Value = server.Class;
        worksheet.Cells[row, 3].Value = server.Group;
        worksheet.Cells[row, 4].Value = server.Tenant;
        worksheet.Cells[row, 5].Value = server.Environment;
        worksheet.Cells[row, 6].Value = latest?.EntityId;
        worksheet.Cells[row, 7].Value = latest?.Type;
        worksheet.Cells[row, 8].Value = latest?.DisplayName;
        worksheet.Cells[row, 9].Style.Numberformat.Format  = "dd/MM/yyyy HH:mm:ss";
        worksheet.Cells[row, 9].Value  = latest?.FirstSeen;
        worksheet.Cells[row,10].Style.Numberformat.Format = "dd/MM/yyyy HH:mm:ss";
        worksheet.Cells[row,10].Value = latest?.LastSeen;
        // … (resto de columnas igual que ya lo tenías) …

        // Sistema Operativo + Versión combinado (si lo usas)
        string osv = (latest?.Properties?.OsVersion     ?? "").Trim();
        string iv  = (latest?.Properties?.InstallVersion?? "").Trim();
        string soVersion = string.Join(" ", new[] { osv, iv }.Where(s => !string.IsNullOrWhiteSpace(s)));
        worksheet.Cells[row, 41].Value = soVersion;

        // Estado Operativo (catálogo)
        worksheet.Cells[row, 46].Value = estado;

        row++;
    }
}