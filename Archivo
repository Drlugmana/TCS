
[HttpGet("health")]
public IActionResult Health([FromServices] IConfiguration cfg)
{
    var rel = cfg["JurisdictionModel:Path"] ?? "ML/Models/jurisdiction_model.zip";
    var full = Path.GetFullPath(rel, AppContext.BaseDirectory);

    var results = new List<string>();

    // 1) Verificaci√≥n del modelo en disco
    if (System.IO.File.Exists(full))
        results.Add($"Model: OK ‚úÖ (found at {full})");
    else
        results.Add($"Model: MISSING ‚ùå (expected at {full})");

    // 2) Verificaci√≥n de inferencia del modelo ML
    try
    {
        var engine = MLModelInitializer.GetEngine();
        var pred = engine.Predict(new JurisdictionInput { Text = "test example" });
        results.Add($"Inference: OK ‚úÖ (PredictedLabel = {pred.PredictedLabel})");
    }
    catch (Exception ex)
    {
        results.Add($"Inference: FAIL ‚ùå ({ex.GetType().Name}: {ex.Message})");
    }

    // 3) (Opcional) Comprobaci√≥n de conectividad externa
    try
    {
        using var http = new HttpClient { Timeout = TimeSpan.FromSeconds(5) };
        var resp = http.GetAsync("https://www.google.com").Result;
        results.Add(resp.IsSuccessStatusCode ? "Internet: OK üåê" : "Internet: FAIL ‚ùå");
    }
    catch (Exception ex)
    {
        results.Add($"Internet: FAIL ‚ùå ({ex.GetType().Name})");
    }

    return Ok(new { results });
}
