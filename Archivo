// ↓↓↓ (dos líneas antes iguales)
var normalizedEntities = new ConcurrentDictionary<string, List<EntitySchema>>(StringComparer.OrdinalIgnoreCase);

foreach (var kvp in entitiesList)
{
    // Key completa tal cual llega de Dynatrace (FQDN si lo hay)
    var fullKey = (kvp.Key ?? string.Empty).Trim();
    if (!string.IsNullOrWhiteSpace(fullKey))
        normalizedEntities.AddOrUpdate(fullKey, _ => kvp.Value, (_, existing) => existing);

    // Key corta (sin dominio) para match flexible
    var shortKey = fullKey.Split('.')[0];
    if (!string.IsNullOrWhiteSpace(shortKey))
        normalizedEntities.AddOrUpdate(shortKey, _ => kvp.Value, (_, existing) => existing);
}
// ↑↑↑ (dos líneas después iguales)



if (!string.IsNullOrWhiteSpace(server.Name))
{
    var hostFull  = server.Name.Trim();         // tal cual viene de CMDB
    var hostShort = hostFull.Split('.')[0];     // sin dominio
    bool matchFound = false;

    if (normalizedEntities.TryGetValue(hostFull, out var matchedEntities) ||
        normalizedEntities.TryGetValue(hostShort, out matchedEntities))
    {
        _serversWithEntities.Add(new ServerWithEntities
        {
            Server = server,
            Entities = matchedEntities
        });
        matchFound = true;
    }

    if (!matchFound)
        _serversNoMatch.Add(server);
}


var server = serverWithEntities.Server;
var latest = serverWithEntities.Entities.OrderByDescending(e => e.LastSeen).FirstOrDefault();

// Nombre “tal cual Dynatrace”: OneAgent → Detected → Display
string dynNameFull =
    latest?.Properties?.OneAgentCustomHostName ??
    latest?.Properties?.DetectedName ??
    latest?.DisplayName ??
    server?.Name; // fallback

worksheet.Cells[row, 1].Value = dynNameFull;   // ← ahora sale exactamente como en Dynatrace