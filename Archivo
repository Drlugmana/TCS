ManagementZones = DeserializeSafe(entityDb.ManagementZones, () => new List<ManagementZone>()),
Properties      = DeserializeSafe(entityDb.Properties,      () => new EntityProperties()),
Tags            = DeserializeTagsSafe(entityDb.Tags),


private static T DeserializeSafe<T>(string raw, Func<T> @default)
{
    if (string.IsNullOrWhiteSpace(raw))
        return @default();

    var s = raw.Trim();

    // Solo intentamos deserializar si parece JSON
    if (!(s.StartsWith("{") || s.StartsWith("[")))
        return @default();

    try
    {
        var parsed = JsonConvert.DeserializeObject<T>(s);
        return parsed is null ? @default() : parsed;
    }
    catch
    {
        return @default();
    }
}